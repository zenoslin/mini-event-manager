{"version":3,"file":"bundle.cjs.js","sources":["../src/main.ts"],"sourcesContent":["type Listener = ((...payload: any) => void) & { isOnce?: boolean };\n\ninterface ListenersMap {\n  [propName: string]: Listener[];\n}\n\nexport default class MiniEvent {\n  private _listenersMap: ListenersMap;\n\n  constructor() {\n    this._listenersMap = {};\n  }\n\n  on(evnetName: string, linstener: Listener): MiniEvent {\n    if (undefined === this._listenersMap[evnetName]) {\n      this._listenersMap[evnetName] = [];\n    }\n    this._listenersMap[evnetName].push(linstener);\n    return this;\n  }\n\n  once(evnetName: string, listener: Listener): MiniEvent {\n    listener.isOnce = true;\n    this.on(evnetName, listener);\n    return this;\n  }\n\n  off(evnetName: string, linstener?: Listener): MiniEvent {\n    const listenerList: Listener[] = this._listenersMap[evnetName];\n    // has this event\n    if (listenerList !== undefined) {\n      if (linstener === undefined) {\n        // clear all listener\n        delete this._listenersMap[evnetName];\n      } else {\n        // clear this event\n        const index = listenerList.findIndex(\n          (fn: Listener) => fn === linstener\n        );\n        listenerList.splice(index, 1);\n      }\n    }\n    return this;\n  }\n\n  emit(evnetName: string, ...payload: any): boolean {\n    const listenerList: Listener[] = this._listenersMap[evnetName];\n    if (undefined !== listenerList && 0 < listenerList.length) {\n      for (let [index, listener] of listenerList.entries()) {\n        if (listener.isOnce) {\n          let listenerClone = listener;\n          listenerList.splice(index, 1);\n          listenerClone(...payload);\n        } else {\n          listener(...payload);\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  has(eventName: string): boolean {\n    return (\n      this._listenersMap[eventName] !== undefined &&\n      this._listenersMap[eventName].length > 0\n    );\n  }\n\n  eventNames() {\n    const eventNameList: string[] = [];\n    for (let eventName in this._listenersMap) {\n      eventNameList.push(eventName);\n    }\n    return eventNameList;\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;IAGE;QACE,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;KACzB;IAED,sBAAE,GAAF,UAAG,SAAiB,EAAE,SAAmB;QACvC,IAAI,SAAS,KAAK,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE;YAC/C,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;SACpC;QACD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC9C,OAAO,IAAI,CAAC;KACb;IAED,wBAAI,GAAJ,UAAK,SAAiB,EAAE,QAAkB;QACxC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC;KACb;IAED,uBAAG,GAAH,UAAI,SAAiB,EAAE,SAAoB;QACzC,IAAM,YAAY,GAAe,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAE/D,IAAI,YAAY,KAAK,SAAS,EAAE;YAC9B,IAAI,SAAS,KAAK,SAAS,EAAE;gBAE3B,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;aACtC;iBAAM;gBAEL,IAAM,KAAK,GAAG,YAAY,CAAC,SAAS,CAClC,UAAC,EAAY,IAAK,OAAA,EAAE,KAAK,SAAS,GAAA,CACnC,CAAC;gBACF,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAC/B;SACF;QACD,OAAO,IAAI,CAAC;KACb;IAED,wBAAI,GAAJ,UAAK,SAAiB;;QAAE,iBAAe;aAAf,UAAe,EAAf,qBAAe,EAAf,IAAe;YAAf,gCAAe;;QACrC,IAAM,YAAY,GAAe,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAC/D,IAAI,SAAS,KAAK,YAAY,IAAI,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE;;gBACzD,KAA8B,IAAA,KAAA,SAAA,YAAY,CAAC,OAAO,EAAE,CAAA,gBAAA,4BAAE;oBAA7C,IAAA,wBAAiB,EAAhB,aAAK,EAAE,gBAAQ;oBACvB,IAAI,QAAQ,CAAC,MAAM,EAAE;wBACnB,IAAI,aAAa,GAAG,QAAQ,CAAC;wBAC7B,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;wBAC9B,aAAa,wBAAI,OAAO,GAAE;qBAC3B;yBAAM;wBACL,QAAQ,wBAAI,OAAO,GAAE;qBACtB;iBACF;;;;;;;;;YACD,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,KAAK,CAAC;SACd;KACF;IAED,uBAAG,GAAH,UAAI,SAAiB;QACnB,QACE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,SAAS;YAC3C,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,MAAM,GAAG,CAAC,EACxC;KACH;IAED,8BAAU,GAAV;QACE,IAAM,aAAa,GAAa,EAAE,CAAC;QACnC,KAAK,IAAI,SAAS,IAAI,IAAI,CAAC,aAAa,EAAE;YACxC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC/B;QACD,OAAO,aAAa,CAAC;KACtB;IACH,gBAAC;CAAA,IAAA;;;;"}